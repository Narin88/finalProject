<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.last.prj.scoreMana.service.impl.ScoreManaMapper">
	<!-- 학생 정보 -->
	<select id="EnrolmentStudent" parameterType="StudentsVO" resultType="StudentsVO">
		select s.sid, s.sname, m.dname, s.grade, to_char(sysdate,'RRRR') as lyear, s.term,
     			case when to_char(sysdate,'MM') <![CDATA[ >= ]]> 02 and to_char(sysdate,'MM') <![CDATA[ <= ]]> 08  then 1
           		else 2
            	end as target
		from students s, major_view m
		where s.mcode = m.MCODE
		and s.sid = #{sid}
	</select>
	
	<!-- 유저에 대한 학년 가져오기 -->
	<select id="StudentSelectinfo" resultType="StudentsVO">
		SELECT GRADE FROM STUDENTS WHERE SID = #{sid}
	</select>
	
	<!-- 현재 등록된 수강목록조회 -->
	<select id="EnrolmentList" resultType="LectureVO">
		select l.opennum, l.lnum||'-'||l.dividenum as lnum, l.lyear||'-'||l.term as lyear, li.GRADE,
		       li.lname, li.CREDIT, mv.dname, mv.mname, find_code_name(100,li.dcode) as division, 
          	   l.NEWLIMITCOUNT, lr.lrname, l.timetable, (select count(*) from score_mana where opennum = l.opennum) as encount
		from lecture l, lecture_info li, lecture_room lr, MAJOR_VIEW mv
		where l.lnum = li.lnum
    	and mv.MCODE = li.MCODE
		and l.lrcode = lr.lrcode
		and l.DATESTATUS = '수강중'
   		and l.lyear = to_char(sysdate,'RRRR')
	    and l.term = case when to_char(sysdate,'MM') >= 02 and to_char(sysdate,'MM') <![CDATA[ <= ]]> 08  then 1
	                 else 2 end
		and l.opennum not in (select sm.opennum from score_mana sm, lecture l where sm.opennum = l.OPENNUM
                          and l.lyear = to_char(sysdate,'RRRR')
                          and sm.sid = #{sid})
        
		<if test="seach != null and seach != ''">
			<choose>
				<when test="seachgubun == 'lnum'">
					and li.lnum like '%${seach}%'
				</when>
				<when test="seachgubun == 'lname'">
					and li.lname like '%${seach}%'
				</when>
			</choose>
		</if>
		ORDER BY 1
	</select>

<!-- 	수강신청 중복체크
	<select id ="OverlapCheck" parameterType="ScoreManaVO" resultType="ScoreManaVO">
		select l.opennum, s.sid from lecture l, SCORE_MANA s
		where l.OPENNUM = s.OPENNUM
		AND S.SID = #{sid}
		AND L.OPENNUM = #{opennum}
	</select>
	
	수강취소(삭제)
	<delete id="AjaxEnrolmentDelete" parameterType="ScoreManaVO">
		delete from score_mana
		where sid = #{sid}
		and opennum = #{opennum}
	</delete> -->
	
	<!-- 수강신청 -->
	<insert id="AjaxEnrolmentInsert" parameterType="ScoreManaVO">
		  insert into score_mana(sid,opennum,retake)
		  values (${sid},${opennum},retake_check(${sid},${opennum}))
	</insert>
	
	<!-- 재수강 체크 -->
	<select id="RetakeChek" parameterType="ScoreManaVO" resultType="string">
	select retake_check(#{sid},#{opennum})
	from dual
	</select>
	
	<!-- 학생 현재학점 -->
	<select id="AjaxCreditCheck" parameterType="string" resultType="int">
		select nvl(sum(li.CREDIT),100)
		from students s, score_mana sm, lecture_info li, lecture l
		where s.sid = sm.sid
		and li.LNUM = l.LNUM
		and l.OPENNUM = sm.OPENNUM
		and s.sid = #{sid}
		and l.lyear = to_char(sysdate,'RRRR')
	</select>
	
	<!-- 수강신청 완료 목록 -->
	<select id="scoreList" resultType="LectureVO">
		select sc.opennum, l.lnum||'-'||l.DIVIDENUM as lnum, l.LYEAR||'-'||l.TERM as lyear,
		       li.GRADE, li.LNAME, li.CREDIT, mv.dname, mv.mname,find_code_name(100,li.dcode) as division,
		       l.TIMETABLE, lr.LRNAME
		from score_mana sc, lecture l, lecture_info li, MAJOR_VIEW mv, lecture_room lr
		where sc.OPENNUM = l.OPENNUM
		and l.LNUM = li.LNUM
		and l.lrcode = lr.lrcode
		and li.mcode = mv.mcode
		and l.lyear = to_char(sysdate,'RRRR')		
		and sc.sid = #{sid}
		ORDER BY 1
	</select>
	
	<!-- 수강 취소 -->
	<delete id="deletescore" parameterType="ScoreManaVO">
		delete from score_mana
		where sid = #{sid}
		and opennum = #{opennum}
	</delete>

	<!-- 내 수강꾸러미 목록 -->
	<select id="getpreenrolment" resultType="PreEnrolmentVO">
		select l.LNUM||'-'||l.dividenum as lnum, li.lname,li.credit,
				find_code_name(100,li.dcode) as division, l.TIMETABLE||' / '||lr.LRNAME as timetable, l.timetable as time,
				case when retake_Check(#{sid},l.opennum) = '001' then 'Y'
					 when retake_Check(#{sid},l.opennum) = '002' then 'N'
				end as retake,l.opennum
		FROM PREENROLMENT P, LECTURE L, LECTURE_INFO LI, LECTURE_ROOM LR
		WHERE P.OPENNUM = L.OPENNUM
		AND L.LNUM = LI.LNUM
		AND L.LRCODE = LR.LRCODE
		AND P.SID = #{sid}
	</select>
	
	<!-- 시간표 중복체크 -->
	<select id="timetablecheck" parameterType="LectureVO" resultType="int">
		select timetablecheck(#{sid},#{timetable})
		from dual
	</select>
	
	<!-- 모달창 한강의 정보 -->
	<select id="oneselectLecture" parameterType="LectureVO" resultType="LectureVO">
		SELECT l.*,(select count(*) from score_mana s where opennum = l.opennum) as encount, li.credit
		FROM LECTURE l, lecture_info li
		WHERE OPENNUM = #{opennum}
		and l.lnum = li.lnum
	</select>
	
	<delete id="AjaxPreEnrolmentdelete" parameterType="LectureVO">
		delete from preEnrolment where sid = #{sid} and opennum = #{opennum}
	</delete>
</mapper>