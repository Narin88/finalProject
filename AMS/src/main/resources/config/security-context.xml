<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<security:http pattern="/resources/**" security="none" />
	
	<security:http>
		<security:intercept-url pattern="/goLogin" access="permitAll()" />
		<security:intercept-url pattern="/**" access="hasAnyRole('ROLE_PRO', 'ROLE_STD')"/>
		<!-- <security:intercept-url pattern="/WEB-INF/views/**" access="isAuthenticated()" />
		<security:intercept-url pattern="/admin/**" access="hasAuthority('ROLE_PRO')" /> -->
		<security:form-login 
						login-page="/goLogin"
						login-processing-url="/logincheck"
						default-target-url="/home"
						username-parameter="id"
						password-parameter="pwd"
						/>
		<security:logout logout-url="/logout" logout-success-url="/goLogin" />
		<security:csrf disabled="true" />
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query=
					"select SID, '{noop}' || PWD, 1
					from role_chk
					where sid = ?"
				authorities-by-username-query=			 
					"select sid, ROLE_NAME
					from role_chk
					where sid = ?" />
					<!-- <security:password-encoder hash="bcrypt" /> -->
		</security:authentication-provider>
	</security:authentication-manager>

</beans:beans>