<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.last.prj.students.service.impl.StudentsMapper">

	<!-- 학생 본인 정보 조회 -->
	<select id="studentInfo" resultType="StudentsVO">
		SELECT M.MNAME, m.dname,
		        P.PNAME,
		        S.SID, P.pid, S.SNAME, S.SADDRESS, S.EMAIL,
		        SUBSTR(S.SPHONE, 1, 3) || '-' || SUBSTR(S.SPHONE, 4, 4) || '-' || SUBSTR(S.SPHONE, 7, 4) SPHONE,
		        TO_CHAR(S.ENTER_DATE, 'RRRR/MM/DD') ENTER_DATE, 
                S.GRADE, GRADE * 2 - (2-TERM) TERM, S.SGENDER, S.DISABLED,
                SUBSTR(S.SBIRTH, 1, 4) || '/' || SUBSTR(S.SBIRTH, 5, 2) || '/' || SUBSTR(S.SBIRTH, 7, 2) SBIRTH,
		        FIND_CODE_NAME(300, S.SSTATUS) SSTATUS
		FROM major_view m, STUDENTS S, PROFESSOR P
		WHERE M.MCODE = S.MCODE
		AND S.MCODE = P.MCODE
		AND P.PID = S.PID
		AND S.SID = #{sid}
	</select>
	
	<!-- 학생 본인 성적 조회 -->	
	<select id="scoreView" resultType="StudentsVO">
		SELECT M.*, 
		        L.LYEAR, L.TERM, I.LNAME,
		        I.CREDIT, FIND_CODE_NAME(100, I.DCODE) DIVISION, P.PNAME
		FROM SCORE_MANA M, STUDENTS S, LECTURE L, LECTURE_INFO I, PROFESSOR P
		WHERE M.SID = S.SID
		AND M.OPENNUM = L.OPENNUM
		AND L.LNUM = I.LNUM
		AND S.SID = #{sid}
        AND p.pid = I.pid
        <if test="term != null and term != ''">
        	AND L.lyear = #{lyear}
        	AND L.term = #{term}
        </if>
		ORDER BY L.LYEAR, L.TERM, I.CREDIT DESC, I.LNAME
	</select>
	
	<!-- 학생 본인 수강 신청 과목 조회 -->
	<select id="appliedLecture" resultType = "StudentsVO">
		SELECT
		    I.LNUM, I.LNAME, FIND_CODE_NAME(100, I.DCODE) DIVISION, I.CREDIT, l.lyear,l.term,
            L.TIMETABLE, L.DIVIDENUM, L.OPENNUM,
   			P.PNAME, P.EMAIL, P.PID,
   			(SUBSTR(PPHONE, 1, 3) || '-' || SUBSTR(PPHONE, 4, 4) || '-' || SUBSTR(PPHONE, 7, 4)) PPHONE,
   			R.LRNAME
		FROM STUDENTS S, SCORE_MANA M, PROFESSOR P,
		    LECTURE_INFO I, LECTURE L, LECTURE_ROOM R
		WHERE S.SID = M.SID
		AND P.PID = L.PID
		AND L.PID = I.PID
		AND L.LRCODE = R.LRCODE
		AND M.OPENNUM = L.OPENNUM
		AND I.LNUM = L.LNUM
		AND L.LYEAR = TO_CHAR(SYSDATE,'RRRR')
		AND L.TERM = #{term}
		AND S.SID = #{sid}
		ORDER BY I.CREDIT DESC, I.LNAME
	</select>
	
	<!-- 강의 시간표들 조회 -->
	<select id="lectureLookUp" resultType = "StudentsVO">
		SELECT 
			(I.LNUM || '-' || L.DIVIDENUM) LNUM, 
			I.LNAME, FIND_CODE_NAME(100, I.DCODE) DIVISION, I.GRADE TARGET, I.CREDIT, I.LIMITCOUNT, 
		    P.PNAME, P.EMAIL, P.PID, 
		    (SUBSTR(PPHONE, 1, 3) || '-' || SUBSTR(PPHONE, 4, 4) || '-' || SUBSTR(PPHONE, 7, 4)) PPHONE, 
		    L.TIMETABLE, L.OPENNUM,
		    R.LRNAME, 
		    MV.MNAME, MV.DNAME
		FROM LECTURE L, LECTURE_INFO I, LECTURE_ROOM R, PROFESSOR P, MAJOR_VIEW MV
		WHERE P.PID = L.PID
		AND L.PID = I.PID
		AND L.LRCODE = R.LRCODE
		AND L.LYEAR = TO_CHAR(SYSDATE,'RRRR')
		AND L.TERM = #{term}
		AND L.LNUM = I.LNUM
		AND MV.MCODE = I.MCODE
		<if test = "mcode != null and mcode != ''">
			AND I.MCODE = #{mcode}
		</if>
		<if test = "dname != null and dname != ''">
			AND MV.DNAME = #{dname} 
		</if>
		<if test = "division != null and division != ''">
			AND FIND_CODE_NAME(100, I.DCODE) LIKE '%${division}%'
		</if>
		<if test = "location != null and location != ''">
			AND R.LOCATION = #{location}
		</if>
		<if test = "grade != null and grade != ''">
			AND I.GRADE = #{grade}
		</if>
		<if test = "timetable != null and timetable != ''">
			AND L.TIMETABLE LIKE '%${timetable}%'
		</if>
		ORDER BY I.CREDIT DESC, I.LNAME
	</select>
	
	<!-- 교수 정보 보기 -->
	<select id="professorSelect" resultType="ProfessorVO">
		SELECT PNAME, EMAIL, 
        		SUBSTR(PPHONE, 1, 3) || '-' || SUBSTR(PPHONE, 4, 4) || '-' || SUBSTR(PPHONE, 7, 4) PPHONE
		FROM PROFESSOR
		WHERE PNAME = #{pname}
	</select>
	
	<!-- 학생 본인 인증 -->
	<select id="selfAuthentication" resultType="StudentsVO">
		SELECT SNAME, PWD
		FROM STUDENTS
		WHERE SID = #{sid}
		AND PWD = #{pwd}
	</select>
	
	
	<!-- 학생 정보 수정 -->
	<update id="studentUpdate">
		UPDATE STUDENTS
		SET PWD = #{pwd}
		WHERE SID = #{sid}
	</update>
	
	<!-- 이메일 학번 체크 -->
	<select id="chkSidEmail" parameterType="StudentsVO" resultType="StudentsVO">
		SELECT *
		FROM students
		WHERE sid = #{sid} AND email = #{email}
	</select>
	
</mapper>